package ру.евант.деньги;

import java.util.ArrayList;
import java.util.List;

/**
 * <b>Класс Кошелек</b>
 * Класс содержит:
 * количествоМонетКопейки
 * количествоМонетРубли
 * количествоКупюр
 * балансМонетКопейки
 * балансМонетРубли
 * балансКупюр
 * балансДенегВКошельке
 *
 * конструктор для создания экземпляров класса
 * методы для работы с экземплярами класса
 *
 * @version 1.0
 * @autor Евсеев Антон Владимирович
 */
public class Кошелек {

    private String коп = "коп.";
    private String руб = "руб.";
    private String шт = "шт.";

    private int количествоМонетКопейки = 0;
    private int количествоМонетРубли = 0;
    private int количествоКупюр = 0;

    private double балансМонетКопейки = 0;
    private double балансМонетРубли = 0;
    private double балансКупюр = 0;

    private double балансДенегВКошельке = 0;


    private List<Деньги> баланс = new ArrayList<>();

    public Кошелек() {
    }

    public Кошелек(List<Деньги> деньги) {
        this.баланс = деньги;
        сортироватьДеньгиВКошельке(деньги);
    }

    private void сортироватьДеньгиВКошельке(List<Деньги> деньги){
        String имя = "";
        for(Деньги экземпляр : деньги) {
            имя = экземпляр.получитьИмя();
            if (имя.contains("к")) {
                количествоМонетКопейки++;
                балансМонетКопейки += экземпляр.получитьНоминальнаяСтоимость();
                балансДенегВКошельке += балансМонетКопейки;
            } else {
                количествоМонетРубли++;
                балансМонетРубли += экземпляр.получитьНоминальнаяСтоимость();
                балансДенегВКошельке += балансМонетРубли;
            }
        }
    }

    private void сортироватьДеньгиВКошельке(Деньги деньги){
        String имя = деньги.получитьИмя();
        if (деньги instanceof Монета) {
            if (имя.contains("к")) {
                количествоМонетКопейки++;
                балансМонетКопейки += деньги.получитьНоминальнаяСтоимость();
                балансДенегВКошельке += (double) балансМонетКопейки / 100;
            } else {
                количествоМонетРубли++;
                балансМонетРубли += деньги.получитьНоминальнаяСтоимость();
                балансДенегВКошельке += балансМонетРубли;
            }
        } else {
            количествоКупюр++;
            балансКупюр += деньги.получитьНоминальнаяСтоимость();
            балансДенегВКошельке += балансКупюр;
        }
    }

    public void пополнить(Деньги сумма) {
        баланс.add(сумма);
        сортироватьДеньгиВКошельке(сумма);
    }

    public void пополнить(Купюра сумма) {
        баланс.add(сумма);
        сортироватьДеньгиВКошельке(сумма);
    }

    public void пополнить(Монета сумма) {
        баланс.add(сумма);
        сортироватьДеньгиВКошельке(сумма);
    }

    public void истратить(Купюра сумма) {

    }


    public double получитьБалансВРублях(){
        return балансДенегВКошельке;
    }

    @Override
    public String toString() {
        return "В кошельке " + балансДенегВКошельке + " " + руб + "{" +
                "количествоМонетКопейки=" + количествоМонетКопейки + шт +
                ", балансМонетКопейки=" + балансМонетКопейки + коп +
                ", количествоМонетРубли=" + количествоМонетРубли + шт +
                ", балансМонетРубли=" + балансМонетРубли + руб +
                ", количествоКупюр=" + количествоКупюр + шт +
                ", балансКупюр=" + балансКупюр + руб +
                '}';
    }
}
